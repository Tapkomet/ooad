Index: src/main/java/com/ukmaSupport/dao/interfaces/OrderDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/ukmaSupport/dao/interfaces/OrderDao.java	(revision e1e97eae75a47ff91b94e90dff40371a10b3ec73)
+++ src/main/java/com/ukmaSupport/dao/interfaces/OrderDao.java	(revision )
@@ -20,6 +20,8 @@
 
     List<Order> getAll();
 
+    public void updateStatus(Order order);
+
     List<Order> getAllAssistOrders(int assistid);
 
     List<Order> getByAssistAndStatus(int assistid, String status);
\ No newline at end of file
Index: src/main/webapp/WEB-INF/views/assistPage/assistUncomplOrders.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/views/assistPage/assistUncomplOrders.jsp	(revision e1e97eae75a47ff91b94e90dff40371a10b3ec73)
+++ src/main/webapp/WEB-INF/views/assistPage/assistUncomplOrders.jsp	(revision )
@@ -70,7 +70,8 @@
                 $.each(response, function (i, order) {
                     trHTML += "<tr><td>" + order.title + "</td>" +
                     '   <td>' + order.workplace_access_num + "</td>" +
-                    '   <td>' + formatDate(new Date(order.createdAt), '%d.%M.%Y   %H:%m:%s') + "</td></tr>";
+                    '   <td>' + formatDate(new Date(order.createdAt), '%d.%M.%Y   %H:%m:%s') + "</td>" +
+                            '<td><a class="menu-element-li" href = "/myUncomplOrdersDone?orderid='+order.id+'" >Mark as Done</a></td></tr>';
                 });
                 $('#records_table tbody').empty();
                 $('#records_table').append(trHTML);
@@ -129,6 +130,7 @@
                 <th class="no-sort">Title</th>
                 <th class="no-sort">Auditorium</th>
                 <th>Date</th>
+                <th></th>
             </tr>
             </thead>
         </table>
\ No newline at end of file
Index: src/main/java/com/ukmaSupport/controllers/AssistController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/ukmaSupport/controllers/AssistController.java	(revision e1e97eae75a47ff91b94e90dff40371a10b3ec73)
+++ src/main/java/com/ukmaSupport/controllers/AssistController.java	(revision )
@@ -19,6 +19,7 @@
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.context.request.RequestContextHolder;
 import org.springframework.web.context.request.ServletRequestAttributes;
+import com.ukmaSupport.dao.interfaces.OrderDao;
 
 import javax.servlet.http.HttpSession;
 import java.sql.Timestamp;
@@ -34,6 +35,9 @@
     private OrderService orderService;
 
     @Autowired
+    private OrderDao orderDao;
+
+    @Autowired
     private WorkplaceService workplaceService;
 
     @Autowired
@@ -215,6 +219,20 @@
     @RequestMapping(value = "/assistUserhome", method = RequestMethod.GET)
     public String listAssistUserAllOrders(ModelMap model) {
         return "assistPage/assistUserhome";
+    }
+
+    @RequestMapping(value = "/myUncomplOrdersDone", method = RequestMethod.GET)
+    public String setToDone(@RequestParam("orderid") int id,  Model model) {
+
+        Order order = orderService.getById(id);
+        order.setStatus(DONE);
+        order.setId(0);
+           orderService.delete(id);
+        orderService.createOrUpdate(order);
+
+
+
+        return "assistPage/assistUncomplOrders";
     }
 
 }
Index: src/main/java/com/ukmaSupport/dao/impl/OrderDaoImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/ukmaSupport/dao/impl/OrderDaoImpl.java	(revision e1e97eae75a47ff91b94e90dff40371a10b3ec73)
+++ src/main/java/com/ukmaSupport/dao/impl/OrderDaoImpl.java	(revision )
@@ -90,6 +90,9 @@
     public void update(Order order) {
         jdbcTemplate.update(UPDATE,order.getTitle(),order.getContent(),order.getCreatedAt(),order.getId());
     }
+    public void updateStatus(Order order) {
+        jdbcTemplate.update(UPDATE, order.getTitle(),order.getContent(),order.getStatus(),order.getId());
+    }
     @Override
     public void delete(int id) {
         jdbcTemplate.update(DELETE_ORDER, id);
